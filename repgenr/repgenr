#!/usr/bin/env python3

"""
Software name: FlexGenR (Flexible Genome Repositories)
Software name: RepGenR (Representative-Genome Repositories)
"""

import sys
import os
import subprocess
import argparse
import time

# Check if valid input arguments (script name + module)
args = sys.argv
if not len(args) >= 2:
    args.append('') # dummy-add something to trigger error-print below
#/
# Check which module was requested
wrapper = args[0]
module = args[1]
module_args = args[2:]
repgenr_modules = ('metadata','genome','glance','derep','derep_stocker','phylo','tree2tax',)
if not module in repgenr_modules:
    print('Usage: '+wrapper+' module {'+','.join(repgenr_modules)+'}')
    if not module in ('','--help','-h'):
        print('error: module "'+module.replace('.py','')+'" does not exist!')
    sys.exit()
#/
# Check if arguments are input multiple times
args_count = {}
for arg in args:
    if not arg in args_count:       args_count[arg] = 0
    args_count[arg] += 1

args_count_multiple = []
for arg,count in args_count.items():
    if arg[0] == '-' or arg[:2] == '--':
        if count >= 2:
            args_count_multiple.append([arg,count])

if args_count_multiple:
    print('[WARNING] Found multiple inputs of arguments:')
    for arg,count in args_count_multiple:
        print(arg+'\t'+str(count))
    print(' '.join(args))
    print('Please specify arguments once. Terminating!')
    sys.exit()
#/
cmd = [module+'.py'] + module_args
print('[DEBUG] Wrapper CMD:')
print(cmd)
print()


if 1:
    if not {'-h','--help'}.intersection(args_count):
        subprocess.call('printf "[INFO][TIMESTAMP][START] " && date',shell=True)
    
    time_start = time.time()
    subprocess.call(' '.join(cmd),shell=True)
    time_end = time.time()
    
    if not {'-h','--help'}.intersection(args_count):
        subprocess.call('printf "[INFO][TIMESTAMP][END] " && date',shell=True)
    
    if not {'-h','--help'}.intersection(args_count):
        time_delta = time_end - time_start
        mins,secs = divmod(time_delta,60)
        hours,mins = divmod(mins,60)
        print('[INFO][RUNTIME] '+f'Elapsed time: {int(hours):02d} hours and {int(mins):02d} minutes')

if 0:
    process = subprocess.Popen(' '.join(cmd),shell=True,stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    
    while process.poll() is None:
        line_raw = process.stdout.readline() # bufsize?
        line = line_raw.decode()
        line = line.strip('\n')
        if not line: continue
        print(line)
    
"""
process = subprocess.Popen('python download.py -wd output_test2', shell=True,stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
#for line in p.stdout.readlines():
#    line = line.decode()
#    print(line)
while process.poll() is None:
    line_raw = process.stdout.readline() # bufsize?
    line = line_raw.decode()
    line = line.strip('\n')
    if not line: continue

    print(line)
"""



